# LAMMPS input file for perovskite

# VARIABLES
variable        data_name       index   NH3_1C_Angew-1+H_minimized_optimized.data
variable        restart_name    index   extend.end.restart
variable        extend_name     index   extend.end.data
variable        settings_name   index   NH3_1C_Angew-1+H_minimized_optimized.in.settings
variable        nSteps_NPT      index   100000
variable        nSteps_NVT      index   100000
variable        avg_freq        index   1000
variable        coords_freq     index   1000
variable        thermo_freq     index   1000
variable        dump4avg        index   1
variable        Temp            index   298.0
variable        pressure        index   1.0
variable        vseed1          index   2117
variable        run             index   1

# Change the name of the log output #
log ${run}.eval.log

#===========================================================
# GENERAL PROCEDURES
#===========================================================
units		real   # g/mol, angstroms, fs, kcal/mol, K, atm, charge*angstrom
dimension	3      # 3 dimensional simulation
newton		off 	# use Newton's 3rd law
boundary	p p p	# periodic boundary conditions
atom_style	full	# molecular + charge

#===========================================================
# DEFINE PAIR, BOND, AND ANGLE STYLES
#===========================================================
special_bonds   amber
pair_style      hybrid buck/coul/long 15.0 15.0 lj/cut/coul/long 15.0 15.0
pair_modify     shift yes mix arithmetic       # using Lorenz-Berthelot mixing rules
bond_style      harmonic
angle_style     harmonic
dihedral_style  opls
kspace_style    pppm 0.0001

#===========================================================
# SETUP SIMULATIONS
#===========================================================

# READ IN COEFFICIENTS/COORDINATES/TOPOLOGY
if "${run} == 0" then &
   "read_data ${data_name}" &
else &
   "read_restart ${restart_name}"
include ${settings_name}

# SET RUN PARAMETERS
timestep	1.0		# fs
run_style	verlet 		# Velocity-Verlet integrator
neigh_modify every 1 delay 10 check yes one 10000

# SET OUTPUTS
thermo_style    custom step temp vol density etotal pe ebond eangle edihed ecoul elong evdwl enthalpy press
thermo_modify   format float %14.6f
thermo ${thermo_freq}

# DECLARE RELEVANT OUTPUT VARIABLES
variable        my_step equal   step
variable        my_temp equal   temp
variable        my_rho  equal   density
variable        my_pe   equal   pe
variable        my_ebon equal   ebond
variable        my_eang equal   eangle
variable        my_edih equal   edihed
variable        my_evdw equal   evdwl
variable        my_eel  equal   (ecoul+elong)
variable        my_ent  equal   enthalpy
variable        my_P    equal   press
variable        my_vol  equal   vol

fix averages all ave/time ${dump4avg} $(v_avg_freq/v_dump4avg) ${avg_freq} v_my_temp v_my_rho v_my_vol v_my_pe v_my_edih v_my_evdw v_my_eel v_my_ent v_my_P file ${run}.thermo.avg


# CREATE COORDINATE DUMPS FOR NVE RELAXATION
dump relax all custom ${coords_freq} ${run}.nve.1.lammpstrj id type x y z 
dump_modify relax sort  id

# INITIALIZE VELOCITIES AND CREATE THE CONSTRAINED RELAXATION FIX
if "${run} == 0" then &
"velocity        all create ${Temp} ${vseed1} mom yes rot yes     # DRAW VELOCITIES" &
"fix relax all nve/limit 0.01" &
"run             10000" &
"unfix relax" &
"undump relax" 

#===========================================================
# RUN PRODUCTION
#===========================================================

# UPDATE RUN PARAMETERS AND CREATE FIX
fix mom all momentum 1000 linear 1 1 1 angular # Zero out system linear and angular momentum every ps 

# NPT equilibration, x and z direction to accomodate any lattice changes
fix equil all npt temp ${Temp} ${Temp} 100.0 x ${pressure} ${pressure} 1000.0 z ${pressure} ${pressure} 1000.0  # NPT, nose-hoover 100 fs T relaxation
dump equil all custom ${coords_freq} ${run}.npt.lammpstrj id type x y z 
dump_modify equil sort  id

# RUN NPT
run		${nSteps_NPT}
unfix equil
undump equil


# NVT run
fix equil all nvt temp ${Temp} ${Temp} 100.0 # NVT, nose-hoover 100 fs T relaxation

# CREATE COORDINATE DUMPS FOR EQUILIBRIUM
dump equil all custom ${coords_freq} ${run}.nvt.lammpstrj id type x y z 
dump_modify equil sort  id

# RUN NVT
run		${nSteps_NVT}
unfix equil
undump equil

# WRITE RESTART FILES, CLEANUP, AND EXIT
write_restart   extend.end.restart
write_data      extend.end.data pair ii
unfix           averages

# Update run number
variable sub equal (v_run+1)
shell sed -i /variable.*run.*index/s/${run}/${sub}/g eval.in.init
shell echo "Run ${run} finished." >> ${run}.success
